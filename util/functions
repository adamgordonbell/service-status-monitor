#! /bin/bash
# shellcheck disable=SC2207 # Arrays are a pain in bash 3

echo "functions assume they are run from repo root"
echo "run \"list\" for a list of helpers"

INIT_LOCATION="$0"

## External

,run_app_server() { # Feedback
   sudo FLASK_RUN_PORT=3000 uv run scripts/app_server.py
}

,run_no_sniff() { # Run without packet sniffing (no sudo required)
   FLASK_RUN_PORT=3000 uv run python scripts/app_server.py --no-sniff
}

# ,run_docker() {
#     uv run python ./scripts/container.py
# }

,run_cli() { # Show service status dashboard in terminal
    uv run python scripts/service_status_cli.py
}

,run_tests() {
    uv run python -m pytest tests/
}

,kill_port() {
    lsof -ti:3000 | xargs kill -9 2>/dev/null || echo "No process running on port 3000"
}

,check_port() { # Check what's running on port 3000
    lsof -i :3000
}

,pulumi_up() { # Deploy infrastructure using Pulumi
    (cd infra && uv run pulumi up)
}

# Environment variables
export PULUMI_STACK_URL=$(cd infra && uv run pulumi stack output api_url 2>/dev/null || echo "")

,run_check_api() { # Check the API status endpoint
    if [ -n "$PULUMI_STACK_URL" ]; then
        curl "${PULUMI_STACK_URL}/"
    else
        echo "Error: Could not get API URL from Pulumi outputs"
    fi
}

,build_docker() { # Build the Docker image
    docker build -t app-server -f infra/Dockerfile .
}

,run_docker() { # Run the Flask app in Docker
    docker run -d -p 3000:3000 app-server
}

,run_lambda_logs() { # View recent Lambda logs
    aws logs tail "/aws/lambda/custom-lambda" --since "${1:-5m}" --follow
}